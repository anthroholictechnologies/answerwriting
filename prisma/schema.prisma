// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  GOOGLE
  CREDENTIALS
}

model User {
  id             String       @id @default(uuid()) @db.Uuid
  firstName      String?      @map("first_name")
  lastName       String?      @map("last_name")
  email          String       @unique
  password       String?
  emailVerified  Boolean      @default(false) @map("email_verified")
  profilePicture String?      @map("profile_picture")
  authProvider   AuthProvider @default(CREDENTIALS) @map("auth_provider")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  emailVerificationTokens EmailVerificationToken[]

  @@map("users")
}

model EmailVerificationToken {
  id             String   @id @default(uuid()) @db.Uuid
  token          String   @unique
  userId         String   @map("user_id") @db.Uuid
  expirationDate DateTime @map("expiration_date") @db.Timestamptz(6)
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("email_verification_tokens")
}
